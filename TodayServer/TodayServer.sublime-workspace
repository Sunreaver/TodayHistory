{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ht",
				"HTML	 ƒ"
			],
			[
				"json",
				"JSON	 ƒ"
			],
			[
				"htmlset",
				"HTMLSetString	string, error ƒ"
			],
			[
				"html",
				"HTMLString	string, error ƒ"
			],
			[
				"htm",
				"HTMLString	string, error ƒ"
			],
			[
				"con",
				"Context	struct ʈ"
			],
			[
				"prin",
				"Printf	n int, err error ƒ"
			],
			[
				"book",
				"BookDatabase	struct ʈ"
			],
			[
				"boo",
				"BookDatabase	struct ʈ"
			],
			[
				"imp",
				"import	import (...) ʂ"
			],
			[
				"fuc",
				"func (*Book)	func (...) {...} ʂ"
			],
			[
				"pos",
				"PostForm	url.Values ν"
			],
			[
				"im",
				"import	import (...) ʂ"
			],
			[
				"cou",
				"count2	int ν"
			],
			[
				"flyman",
				"FlyManageFlymemEverydayOut	struct ʈ"
			],
			[
				"make",
				"makeTimeForDeviceLog	max int64, min int64 ƒ"
			],
			[
				"ma",
				"Marshal	[]byte, error ƒ"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "package ctl\n\nimport (\n	\"encoding/json\"\n	\"fmt\"\n\n	\"../mode\"\n	\"gopkg.in/macaron.v1\"\n)\n\nvar (\n	FORM_ERROR = map[string]interface{}{\n		\"status\": 500,\n		\"msg\":    \"推送的参数错误\",\n	}\n	JSON_ERROR = map[string]interface{}{\n		\"status\": 500,\n		\"msg\":    \"解析参数失败\",\n	}\n	DB_ERROR = map[string]interface{}{\n		\"status\": 500,\n		\"msg\":    \"读取数据库失败\",\n	}\n)\n\ntype UploadForm struct {\n	Read string `json:\"readprocess\"`\n}\n\nfunc UploadReadprocess(ctx *macaron.Context) {\n	b, e := ctx.Req.Body().Bytes()\n	if e != nil {\n		ctx.JSON(500, FORM_ERROR)\n		return\n	}\n\n	var data UploadForm\n	e = json.Unmarshal(b, &data)\n	if e != nil {\n		fmt.Println(e.Error())\n		ctx.JSON(501, JSON_ERROR)\n		return\n	}\n\n	var form []mode.Book\n	e = json.Unmarshal([]byte(data.Read), &form)\n	if e != nil {\n		ctx.JSON(502, JSON_ERROR)\n		return\n	}\n\n	saveData(ctx, form)\n}\n\nfunc UploadReadprocessGet(ctx *macaron.Context) {\n	body := ctx.Query(\"readprocess\")\n\n	var form []mode.Book\n	e := json.Unmarshal([]byte(body), &form)\n	if e != nil {\n		ctx.JSON(500, JSON_ERROR)\n		return\n	}\n\n	saveData(ctx, form)\n}\n\nfunc ReadprocessGet(ctx *macaron.Context) {\n\n	books, e := mode.GetReadprocess()\n	if e != nil {\n		ctx.JSON(200, DB_ERROR)\n		return\n	}\n\n	ctx.JSON(200, map[string]interface{}{\n		\"status\": 200,\n		\"msg\":    \"OK\",\n		\"body\":   books,\n	})\n}\n\nfunc saveData(ctx *macaron.Context, form []mode.Book) {\n\n	add := 0\n	update := 0\n	eNum := 0\n\n	for _, v := range form {\n		m, err := v.SaveDB()\n		if err == nil {\n			if m == mode.Add {\n				add++\n			} else if m == mode.Update {\n				update++\n			}\n		} else {\n			eNum++\n		}\n	}\n	fmt.Printf(\"add=%d,update=%d,err=%d\\r\\n\", add, update, eNum)\n\n	ctx.JSON(200, map[string]interface{}{\n		\"status\": 200,\n		\"msg\":    \"上传成功\",\n		\"body\": map[string]int{\n			\"add\":    add,\n			\"update\": update,\n			\"err\":    eNum,\n		},\n	})\n}\n",
			"file": "ctl/UploadReadprocess.go",
			"file_size": 1824,
			"file_write_time": 1456368607000000,
			"settings":
			{
				"buffer_size": 1776,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.go",
			"settings":
			{
				"buffer_size": 520,
				"line_ending": "Unix"
			}
		},
		{
			"file": "text.go",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mode/ReadprocessMode.go",
			"settings":
			{
				"buffer_size": 1138,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mode/init.go",
			"settings":
			{
				"buffer_size": 327,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mode/text.go",
			"settings":
			{
				"buffer_size": 2210,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 67.0,
		"selected_items":
		[
			[
				"remove package",
				"Package Control: Remove Package"
			],
			[
				"upgrade packages",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"removep",
				"GoSublime: Add/Remove package"
			],
			[
				"instal",
				"Package Control: Advanced Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packin",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/theone/Documents/git/TodayHistory/TodayServer/public/main/index.html",
		"/Users/theone/Documents/git/TodayHistory/TodayServer/public/index.html",
		"/Users/theone/Documents/mark.md",
		"/Users/theone/Library/Application Support/Sublime Text 2/Packages/User/MarkdownPreview.sublime-settings",
		"/Users/theone/Library/Application Support/Sublime Text 2/Packages/User/GoSublime.sublime-settings",
		"/Users/theone/Library/Application Support/Sublime Text 2/Packages/GoSublime/GoSublime.sublime-settings",
		"/Users/theone/Documents/untitled.c",
		"/Users/theone/Documents/test.go",
		"/Users/theone/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/theone/Library/Application Support/Sublime Text 2/Packages/GoSublime/USAGE.md",
		"/Users/theone/Library/Application Support/Sublime Text 2/Packages/GoSublime/CHANGELOG.md"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"charset",
			"newSelectCheatLogFrom",
			"RoomPowerPostForm",
			"ObjectIdHex",
			"makeTimeForDeviceLog",
			"16",
			"range",
			"getUserHotels"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ctl/UploadReadprocess.go",
					"settings":
					{
						"buffer_size": 1776,
						"regions":
						{
						},
						"selection":
						[
							[
								1329,
								1329
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1452.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.go",
					"settings":
					{
						"buffer_size": 520,
						"regions":
						{
						},
						"selection":
						[
							[
								277,
								277
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "text.go",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "mode/ReadprocessMode.go",
					"settings":
					{
						"buffer_size": 1138,
						"regions":
						{
						},
						"selection":
						[
							[
								1067,
								1067
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "mode/init.go",
					"settings":
					{
						"buffer_size": 327,
						"regions":
						{
						},
						"selection":
						[
							[
								258,
								258
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mode/text.go",
					"settings":
					{
						"buffer_size": 2210,
						"regions":
						{
						},
						"selection":
						[
							[
								12,
								12
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///Users/theone/Desktop":
	{
		"height": 193.0
	},
	"output.9o:///Users/theone/Documents":
	{
		"height": 100.0
	},
	"output.MarGo-output":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/Users/TheOne/Documents/git/mirror.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 277.0,
	"status_bar_visible": true
}
